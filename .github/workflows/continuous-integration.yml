name: CI

on:
  push:
    branches:
      - "main"
    tags:
      - 'V*.*.*'

  pull_request:
    branches:
      - "*"
jobs:
  test:
    name: Run tests

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.8"]

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref || github.ref }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Start MySQL
        run: |
          sh docker_db/docker_db.sh start

      - name: Show dependencies
        run: | 
          pip list

      - name: Test with pytest with coverage
        run: |
          pytest --cov=. --cov-report=json

      - name: Stop MySQL
        run: |
          sh docker_db/docker_db.sh stop

      - name: Update README with coverage badge
        run: python .github/scripts/update_coverage_badge.py

      - name: Commit and push if changed
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git diff
          if git diff --exit-code --quiet; then
            echo "No changes in coverage"
          else
            git add README.md
            git commit -m "Update coverage badge"
            git push
          fi


  deploy-qa:
    needs: [ test ]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Deploy to QA
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/deploy
        with:
          python-version: '3.8'
          deploy-environment: 'dev'
          host: ${{ secrets.DEPLOY_HOST }}
          private-key: ${{ secrets.SSH_PRIVATE_KEY }}

  deploy-prod:
    needs: [ test ]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/V')
    name: Deploy to Prod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/deploy
        with:
          python-version: '3.8'
          deploy-environment: 'prd'
          host: ${{ secrets.DEPLOY_HOST }}
          private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          tag-name: ${{ github.ref_name }}
