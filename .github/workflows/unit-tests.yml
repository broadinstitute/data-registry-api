name: Tests

on:
  push:
    branches:
      - "main"

  pull_request:
    branches:
      - "*"

jobs:
  test:
    name: Run tests

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.8"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Start MySQL
        run: |
          sh docker_db/docker_db.sh start

      - name: Show dependencies
        run: | 
          pip list

      - name: Test with pytest
        env: # Or as an environment variable
          DATA_REGISTRY_API_KEY: ${{ secrets.API_KEY }}
        run: |
          pytest

      - name: Stop MySQL
        run: |
          sh docker_db/docker_db.sh stop

  deploy-qa:
    needs: [test]
    name: Deploy to QA
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Fabric and dependencies
        run: |
          pip install fabric

      # This step assumes that you have an SSH private key stored as a GitHub secret to access the AWS instance
      - name: Setup SSH Key
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy with Fabric
        run: |
          cd deploy
          fab deploy --env=dev -H ec2-user@${{ secrets.DEPLOY_HOST }}
      
