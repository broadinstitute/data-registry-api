"""sgc_cooccurrence_metadata_table

Revision ID: mno789pqr012
Revises: jkl456mno789
Create Date: 2025-02-08 18:00:00.000000

"""
from alembic import op
from sqlalchemy import text

# revision identifiers, used by Alembic.
revision = 'mno789pqr012'
down_revision = 'jkl456mno789'
branch_labels = None
depends_on = None


def upgrade() -> None:
    conn = op.get_bind()
    
    # Create sgc_cooccurrence_metadata table
    query = """
        CREATE TABLE `sgc_cooccurrence_metadata` (
        `id` binary(32) NOT NULL COMMENT 'guid generated by backend api',
        `file_id` binary(32) NOT NULL COMMENT 'foreign key to sgc_cohort_files',
        `distinct_phenotypes` json NOT NULL COMMENT 'list of distinct phenotype codes in the file',
        `total_pairs` int NOT NULL COMMENT 'total number of phenotype pairs in the file',
        `total_cooccurrence_count` int NOT NULL COMMENT 'sum of all co-occurrence counts in the file',
        `created_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
        PRIMARY KEY (`id`),
        UNIQUE KEY `unique_file_cooccurrence_metadata` (`file_id`),
        KEY `sgc_cooccurrence_metadata_file_fk` (`file_id`),
        CONSTRAINT `sgc_cooccurrence_metadata_file_fk` FOREIGN KEY (`file_id`) REFERENCES `sgc_cohort_files` (`id`) ON DELETE CASCADE
        )
        """
    conn.execute(text(query))


def downgrade() -> None:
    conn = op.get_bind()
    conn.execute(text("DROP TABLE `sgc_cooccurrence_metadata`"))